// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
BuildScript: c:\users\akhullar\source\repos\PerformanceCheck\PerformanceCheck\bin\Release\8aefd1db-8ce1-49cb-8fe9-be3d8dfbf8c4.bat
// ***** Done, took 00:00:03 (3.7 sec)   *****
// Found 2 benchmarks:
//   ForVsForEach.For: DefaultJob [value=100]
//   ForVsForEach.ForEach: DefaultJob [value=100]

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ForVsForEach.For: DefaultJob [value=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: c:\users\akhullar\source\repos\PerformanceCheck\PerformanceCheck\bin\Release\8aefd1db-8ce1-49cb-8fe9-be3d8dfbf8c4.exe --benchmarkName "ForVSForEach+ForVsForEach.For(value: 100)" --job "Default" --benchmarkId 0 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3056.0
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 315806.10 ns, 315.8061 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at ForVSForEach.ForVsForEach.For() in c:\users\akhullar\source\repos\PerformanceCheck\PerformanceCheck\Program.cs:line 45
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount)
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName)
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args)
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: ForVsForEach.ForEach: DefaultJob [value=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: c:\users\akhullar\source\repos\PerformanceCheck\PerformanceCheck\bin\Release\8aefd1db-8ce1-49cb-8fe9-be3d8dfbf8c4.exe --benchmarkName "ForVSForEach+ForVsForEach.ForEach(value: 100)" --job "Default" --benchmarkId 1 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3056.0
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 295019.78 ns, 295.0198 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at ForVSForEach.ForVsForEach.ForEach() in c:\users\akhullar\source\repos\PerformanceCheck\PerformanceCheck\Program.cs:line 57
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount)
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName)
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args)
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ForVSForEach.ForVsForEach-report.csv
  BenchmarkDotNet.Artifacts\results\ForVSForEach.ForVsForEach-report-github.md
  BenchmarkDotNet.Artifacts\results\ForVSForEach.ForVsForEach-report.html

// * Detailed results *
ForVsForEach.For: DefaultJob [value=100]
Runtime = ; GC = 
There are not any results runs

ForVsForEach.ForEach: DefaultJob [value=100]
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.1 (1803/April2018Update/Redstone4)
Intel Core i7-6600U CPU 2.60GHz (Skylake), 1 CPU, 4 logical and 2 physical cores
Frequency=2742189 Hz, Resolution=364.6722 ns, Timer=TSC
  [Host] : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3056.0  [AttachedDebugger]


|  Method | value | Mean | Error |
|-------- |------ |-----:|------:|
|     For |   100 |   NA |    NA |
| ForEach |   100 |   NA |    NA |

Benchmarks with issues:
  ForVsForEach.For: DefaultJob [value=100]
  ForVsForEach.ForEach: DefaultJob [value=100]

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - McAfee Endpoint Security (C:\Program Files (x86)\McAfee\Endpoint Security\Threat Prevention\AMCFG.EXE)
        - Windows Defender (windowsdefender://)
Use InProcessToolchain to avoid new process creation.


// * Legends *
  value : Value of the 'value' parameter
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  1 ns  : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:05 (5.85 sec), executed benchmarks: 2

Global total time: 00:00:09 (9.57 sec), executed benchmarks: 2
// * Artifacts cleanup *
